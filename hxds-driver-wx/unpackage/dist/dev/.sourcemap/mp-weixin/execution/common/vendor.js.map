{"version":3,"sources":["uni-app:///lib/qqmap-wx-jssdk.min.js"],"names":["ERROR_CONF","KEY_ERR","KEY_ERR_MSG","PARAM_ERR","PARAM_ERR_MSG","SYSTEM_ERR","SYSTEM_ERR_MSG","WX_ERR_CODE","WX_OK_CODE","BASE_URL","URL_SEARCH","URL_SUGGESTION","URL_GET_GEOCODER","URL_CITY_LIST","URL_AREA_LIST","URL_DISTANCE","URL_DIRECTION","MODE","driving","transit","EARTH_RADIUS","Utils","safeAdd","x","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","a","b","s","t","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","i","olda","oldb","oldc","oldd","length","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","undefined","length8","charCodeAt","rstrMD5","rstrHMACMD5","key","data","bkey","ipad","opad","hash","concat","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","hexMD5","rawHMACMD5","k","hexHMACMD5","md5","string","raw","getSig","requestParam","sk","feature","mode","sig","requestArr","Object","keys","sort","forEach","push","join","location2query","query","location","lat","lng","latitude","longitude","rad","Math","PI","getEndLocation","to","split","endLocation","parseFloat","getDistance","latFrom","lngFrom","latTo","lngTo","radLatFrom","radLatTo","distance","asin","sqrt","pow","sin","cos","round","toFixed","getWXLocation","success","fail","complete","wx","getLocation","type","getLocationParam","locationArr","polyfillParam","param","checkParamKeyEmpty","errconf","buildErrorConfig","checkKeyword","checkLocation","errCode","errMsg","status","message","handleData","searchResult","searchSimplify","id","title","address","category","tel","adcode","ad_info","city","district","province","suggestResult","suggestSimplify","reverseGeocoderResult","result","reverseGeocoderSimplify","address_component","nation","street","street_number","recommend","formatted_addresses","rough","pois","poisSimplify","geocoderResult","geocoderSimplify","address_components","level","provinceResult","cityResult","districtResult","districtByCity","calculateDistanceResult","elements","direction","routes","buildWxRequestConfig","options","that","header","method","res","statusCode","locationProcess","locationsuccess","locationfail","locationcomplete","QQMapWX","Error","keyword","orderby","page_size","page_index","address_format","filter","auto_extend","region","rectangle","boundary","request","url","region_fix","policy","get_subpois","coord_type","get_poi","poi_options","from","locationTo","duration","calculateResult","distanceResult","SET_URL_DIRECTION","from_poi","heading","speed","accuracy","road_type","to_poi","from_track","waypoints","plate_number","departure_time","module","exports"],"mappings":"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","file":"execution/common/vendor.js","sourcesContent":["var ERROR_CONF = { KEY_ERR: 311, KEY_ERR_MSG: 'key格式错误', PARAM_ERR: 310, PARAM_ERR_MSG: '请求参数信息有误', SYSTEM_ERR: 600, SYSTEM_ERR_MSG: '系统错误', WX_ERR_CODE: 1000, WX_OK_CODE: 200 }; var BASE_URL = 'https://apis.map.qq.com/ws/'; var URL_SEARCH = BASE_URL + 'place/v1/search'; var URL_SUGGESTION = BASE_URL + 'place/v1/suggestion'; var URL_GET_GEOCODER = BASE_URL + 'geocoder/v1/'; var URL_CITY_LIST = BASE_URL + 'district/v1/list'; var URL_AREA_LIST = BASE_URL + 'district/v1/getchildren'; var URL_DISTANCE = BASE_URL + 'distance/v1/'; var URL_DIRECTION = BASE_URL + 'direction/v1/'; var MODE = { driving: 'driving', transit: 'transit' }; var EARTH_RADIUS = 6378136.49; var Utils = { safeAdd(x, y) { var lsw = (x & 0xffff) + (y & 0xffff); var msw = (x >> 16) + (y >> 16) + (lsw >> 16); return (msw << 16) | (lsw & 0xffff) }, bitRotateLeft(num, cnt) { return (num << cnt) | (num >>> (32 - cnt)) }, md5cmn(q, a, b, x, s, t) { return this.safeAdd(this.bitRotateLeft(this.safeAdd(this.safeAdd(a, q), this.safeAdd(x, t)), s), b) }, md5ff(a, b, c, d, x, s, t) { return this.md5cmn((b & c) | (~b & d), a, b, x, s, t) }, md5gg(a, b, c, d, x, s, t) { return this.md5cmn((b & d) | (c & ~d), a, b, x, s, t) }, md5hh(a, b, c, d, x, s, t) { return this.md5cmn(b ^ c ^ d, a, b, x, s, t) }, md5ii(a, b, c, d, x, s, t) { return this.md5cmn(c ^ (b | ~d), a, b, x, s, t) }, binlMD5(x, len) { x[len >> 5] |= 0x80 << (len % 32); x[((len + 64) >>> 9 << 4) + 14] = len; var i; var olda; var oldb; var oldc; var oldd; var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; for (i = 0; i < x.length; i += 16) { olda = a; oldb = b; oldc = c; oldd = d; a = this.md5ff(a, b, c, d, x[i], 7, -680876936); d = this.md5ff(d, a, b, c, x[i + 1], 12, -389564586); c = this.md5ff(c, d, a, b, x[i + 2], 17, 606105819); b = this.md5ff(b, c, d, a, x[i + 3], 22, -1044525330); a = this.md5ff(a, b, c, d, x[i + 4], 7, -176418897); d = this.md5ff(d, a, b, c, x[i + 5], 12, 1200080426); c = this.md5ff(c, d, a, b, x[i + 6], 17, -1473231341); b = this.md5ff(b, c, d, a, x[i + 7], 22, -45705983); a = this.md5ff(a, b, c, d, x[i + 8], 7, 1770035416); d = this.md5ff(d, a, b, c, x[i + 9], 12, -1958414417); c = this.md5ff(c, d, a, b, x[i + 10], 17, -42063); b = this.md5ff(b, c, d, a, x[i + 11], 22, -1990404162); a = this.md5ff(a, b, c, d, x[i + 12], 7, 1804603682); d = this.md5ff(d, a, b, c, x[i + 13], 12, -40341101); c = this.md5ff(c, d, a, b, x[i + 14], 17, -1502002290); b = this.md5ff(b, c, d, a, x[i + 15], 22, 1236535329); a = this.md5gg(a, b, c, d, x[i + 1], 5, -165796510); d = this.md5gg(d, a, b, c, x[i + 6], 9, -1069501632); c = this.md5gg(c, d, a, b, x[i + 11], 14, 643717713); b = this.md5gg(b, c, d, a, x[i], 20, -373897302); a = this.md5gg(a, b, c, d, x[i + 5], 5, -701558691); d = this.md5gg(d, a, b, c, x[i + 10], 9, 38016083); c = this.md5gg(c, d, a, b, x[i + 15], 14, -660478335); b = this.md5gg(b, c, d, a, x[i + 4], 20, -405537848); a = this.md5gg(a, b, c, d, x[i + 9], 5, 568446438); d = this.md5gg(d, a, b, c, x[i + 14], 9, -1019803690); c = this.md5gg(c, d, a, b, x[i + 3], 14, -187363961); b = this.md5gg(b, c, d, a, x[i + 8], 20, 1163531501); a = this.md5gg(a, b, c, d, x[i + 13], 5, -1444681467); d = this.md5gg(d, a, b, c, x[i + 2], 9, -51403784); c = this.md5gg(c, d, a, b, x[i + 7], 14, 1735328473); b = this.md5gg(b, c, d, a, x[i + 12], 20, -1926607734); a = this.md5hh(a, b, c, d, x[i + 5], 4, -378558); d = this.md5hh(d, a, b, c, x[i + 8], 11, -2022574463); c = this.md5hh(c, d, a, b, x[i + 11], 16, 1839030562); b = this.md5hh(b, c, d, a, x[i + 14], 23, -35309556); a = this.md5hh(a, b, c, d, x[i + 1], 4, -1530992060); d = this.md5hh(d, a, b, c, x[i + 4], 11, 1272893353); c = this.md5hh(c, d, a, b, x[i + 7], 16, -155497632); b = this.md5hh(b, c, d, a, x[i + 10], 23, -1094730640); a = this.md5hh(a, b, c, d, x[i + 13], 4, 681279174); d = this.md5hh(d, a, b, c, x[i], 11, -358537222); c = this.md5hh(c, d, a, b, x[i + 3], 16, -722521979); b = this.md5hh(b, c, d, a, x[i + 6], 23, 76029189); a = this.md5hh(a, b, c, d, x[i + 9], 4, -640364487); d = this.md5hh(d, a, b, c, x[i + 12], 11, -421815835); c = this.md5hh(c, d, a, b, x[i + 15], 16, 530742520); b = this.md5hh(b, c, d, a, x[i + 2], 23, -995338651); a = this.md5ii(a, b, c, d, x[i], 6, -198630844); d = this.md5ii(d, a, b, c, x[i + 7], 10, 1126891415); c = this.md5ii(c, d, a, b, x[i + 14], 15, -1416354905); b = this.md5ii(b, c, d, a, x[i + 5], 21, -57434055); a = this.md5ii(a, b, c, d, x[i + 12], 6, 1700485571); d = this.md5ii(d, a, b, c, x[i + 3], 10, -1894986606); c = this.md5ii(c, d, a, b, x[i + 10], 15, -1051523); b = this.md5ii(b, c, d, a, x[i + 1], 21, -2054922799); a = this.md5ii(a, b, c, d, x[i + 8], 6, 1873313359); d = this.md5ii(d, a, b, c, x[i + 15], 10, -30611744); c = this.md5ii(c, d, a, b, x[i + 6], 15, -1560198380); b = this.md5ii(b, c, d, a, x[i + 13], 21, 1309151649); a = this.md5ii(a, b, c, d, x[i + 4], 6, -145523070); d = this.md5ii(d, a, b, c, x[i + 11], 10, -1120210379); c = this.md5ii(c, d, a, b, x[i + 2], 15, 718787259); b = this.md5ii(b, c, d, a, x[i + 9], 21, -343485551); a = this.safeAdd(a, olda); b = this.safeAdd(b, oldb); c = this.safeAdd(c, oldc); d = this.safeAdd(d, oldd) } return [a, b, c, d] }, binl2rstr(input) { var i; var output = ''; var length32 = input.length * 32; for (i = 0; i < length32; i += 8) { output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff) } return output }, rstr2binl(input) { var i; var output = []; output[(input.length >> 2) - 1] = undefined; for (i = 0; i < output.length; i += 1) { output[i] = 0 } var length8 = input.length * 8; for (i = 0; i < length8; i += 8) { output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32) } return output }, rstrMD5(s) { return this.binl2rstr(this.binlMD5(this.rstr2binl(s), s.length * 8)) }, rstrHMACMD5(key, data) { var i; var bkey = this.rstr2binl(key); var ipad = []; var opad = []; var hash; ipad[15] = opad[15] = undefined; if (bkey.length > 16) { bkey = this.binlMD5(bkey, key.length * 8) } for (i = 0; i < 16; i += 1) { ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5c5c5c5c } hash = this.binlMD5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8); return this.binl2rstr(this.binlMD5(opad.concat(hash), 512 + 128)) }, rstr2hex(input) { var hexTab = '0123456789abcdef'; var output = ''; var x; var i; for (i = 0; i < input.length; i += 1) { x = input.charCodeAt(i); output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f) } return output }, str2rstrUTF8(input) { return unescape(encodeURIComponent(input)) }, rawMD5(s) { return this.rstrMD5(this.str2rstrUTF8(s)) }, hexMD5(s) { return this.rstr2hex(this.rawMD5(s)) }, rawHMACMD5(k, d) { return this.rstrHMACMD5(this.str2rstrUTF8(k), str2rstrUTF8(d)) }, hexHMACMD5(k, d) { return this.rstr2hex(this.rawHMACMD5(k, d)) }, md5(string, key, raw) { if (!key) { if (!raw) { return this.hexMD5(string) } return this.rawMD5(string) } if (!raw) { return this.hexHMACMD5(key, string) } return this.rawHMACMD5(key, string) }, getSig(requestParam, sk, feature, mode) { var sig = null; var requestArr = []; Object.keys(requestParam).sort().forEach(function (key) { requestArr.push(key + '=' + requestParam[key]) }); if (feature == 'search') { sig = '/ws/place/v1/search?' + requestArr.join('&') + sk } if (feature == 'suggest') { sig = '/ws/place/v1/suggestion?' + requestArr.join('&') + sk } if (feature == 'reverseGeocoder') { sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk } if (feature == 'geocoder') { sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk } if (feature == 'getCityList') { sig = '/ws/district/v1/list?' + requestArr.join('&') + sk } if (feature == 'getDistrictByCityId') { sig = '/ws/district/v1/getchildren?' + requestArr.join('&') + sk } if (feature == 'calculateDistance') { sig = '/ws/distance/v1/?' + requestArr.join('&') + sk } if (feature == 'direction') { sig = '/ws/direction/v1/' + mode + '?' + requestArr.join('&') + sk } sig = this.md5(sig); return sig }, location2query(data) { if (typeof data == 'string') { return data } var query = ''; for (var i = 0; i < data.length; i++) { var d = data[i]; if (!!query) { query += ';' } if (d.location) { query = query + d.location.lat + ',' + d.location.lng } if (d.latitude && d.longitude) { query = query + d.latitude + ',' + d.longitude } } return query }, rad(d) { return d * Math.PI / 180.0 }, getEndLocation(location) { var to = location.split(';'); var endLocation = []; for (var i = 0; i < to.length; i++) { endLocation.push({ lat: parseFloat(to[i].split(',')[0]), lng: parseFloat(to[i].split(',')[1]) }) } return endLocation }, getDistance(latFrom, lngFrom, latTo, lngTo) { var radLatFrom = this.rad(latFrom); var radLatTo = this.rad(latTo); var a = radLatFrom - radLatTo; var b = this.rad(lngFrom) - this.rad(lngTo); var distance = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLatFrom) * Math.cos(radLatTo) * Math.pow(Math.sin(b / 2), 2))); distance = distance * EARTH_RADIUS; distance = Math.round(distance * 10000) / 10000; return parseFloat(distance.toFixed(0)) }, getWXLocation(success, fail, complete) { wx.getLocation({ type: 'gcj02', success: success, fail: fail, complete: complete }) }, getLocationParam(location) { if (typeof location == 'string') { var locationArr = location.split(','); if (locationArr.length === 2) { location = { latitude: location.split(',')[0], longitude: location.split(',')[1] } } else { location = {} } } return location }, polyfillParam(param) { param.success = param.success || function () { }; param.fail = param.fail || function () { }; param.complete = param.complete || function () { } }, checkParamKeyEmpty(param, key) { if (!param[key]) { var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + key + '参数格式有误'); param.fail(errconf); param.complete(errconf); return true } return false }, checkKeyword(param) { return !this.checkParamKeyEmpty(param, 'keyword') }, checkLocation(param) { var location = this.getLocationParam(param.location); if (!location || !location.latitude || !location.longitude) { var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + ' location参数格式有误'); param.fail(errconf); param.complete(errconf); return false } return true }, buildErrorConfig(errCode, errMsg) { return { status: errCode, message: errMsg } }, handleData(param, data, feature) { if (feature == 'search') { var searchResult = data.data; var searchSimplify = []; for (var i = 0; i < searchResult.length; i++) { searchSimplify.push({ id: searchResult[i].id || null, title: searchResult[i].title || null, latitude: searchResult[i].location && searchResult[i].location.lat || null, longitude: searchResult[i].location && searchResult[i].location.lng || null, address: searchResult[i].address || null, category: searchResult[i].category || null, tel: searchResult[i].tel || null, adcode: searchResult[i].ad_info && searchResult[i].ad_info.adcode || null, city: searchResult[i].ad_info && searchResult[i].ad_info.city || null, district: searchResult[i].ad_info && searchResult[i].ad_info.district || null, province: searchResult[i].ad_info && searchResult[i].ad_info.province || null }) } param.success(data, { searchResult: searchResult, searchSimplify: searchSimplify }) } else if (feature == 'suggest') { var suggestResult = data.data; var suggestSimplify = []; for (var i = 0; i < suggestResult.length; i++) { suggestSimplify.push({ adcode: suggestResult[i].adcode || null, address: suggestResult[i].address || null, category: suggestResult[i].category || null, city: suggestResult[i].city || null, district: suggestResult[i].district || null, id: suggestResult[i].id || null, latitude: suggestResult[i].location && suggestResult[i].location.lat || null, longitude: suggestResult[i].location && suggestResult[i].location.lng || null, province: suggestResult[i].province || null, title: suggestResult[i].title || null, type: suggestResult[i].type || null }) } param.success(data, { suggestResult: suggestResult, suggestSimplify: suggestSimplify }) } else if (feature == 'reverseGeocoder') { var reverseGeocoderResult = data.result; var reverseGeocoderSimplify = { address: reverseGeocoderResult.address || null, latitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lat || null, longitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lng || null, adcode: reverseGeocoderResult.ad_info && reverseGeocoderResult.ad_info.adcode || null, city: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.city || null, district: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.district || null, nation: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.nation || null, province: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.province || null, street: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street || null, street_number: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street_number || null, recommend: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.recommend || null, rough: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.rough || null }; if (reverseGeocoderResult.pois) { var pois = reverseGeocoderResult.pois; var poisSimplify = []; for (var i = 0; i < pois.length; i++) { poisSimplify.push({ id: pois[i].id || null, title: pois[i].title || null, latitude: pois[i].location && pois[i].location.lat || null, longitude: pois[i].location && pois[i].location.lng || null, address: pois[i].address || null, category: pois[i].category || null, adcode: pois[i].ad_info && pois[i].ad_info.adcode || null, city: pois[i].ad_info && pois[i].ad_info.city || null, district: pois[i].ad_info && pois[i].ad_info.district || null, province: pois[i].ad_info && pois[i].ad_info.province || null }) } param.success(data, { reverseGeocoderResult: reverseGeocoderResult, reverseGeocoderSimplify: reverseGeocoderSimplify, pois: pois, poisSimplify: poisSimplify }) } else { param.success(data, { reverseGeocoderResult: reverseGeocoderResult, reverseGeocoderSimplify: reverseGeocoderSimplify }) } } else if (feature == 'geocoder') { var geocoderResult = data.result; var geocoderSimplify = { title: geocoderResult.title || null, latitude: geocoderResult.location && geocoderResult.location.lat || null, longitude: geocoderResult.location && geocoderResult.location.lng || null, adcode: geocoderResult.ad_info && geocoderResult.ad_info.adcode || null, province: geocoderResult.address_components && geocoderResult.address_components.province || null, city: geocoderResult.address_components && geocoderResult.address_components.city || null, district: geocoderResult.address_components && geocoderResult.address_components.district || null, street: geocoderResult.address_components && geocoderResult.address_components.street || null, street_number: geocoderResult.address_components && geocoderResult.address_components.street_number || null, level: geocoderResult.level || null }; param.success(data, { geocoderResult: geocoderResult, geocoderSimplify: geocoderSimplify }) } else if (feature == 'getCityList') { var provinceResult = data.result[0]; var cityResult = data.result[1]; var districtResult = data.result[2]; param.success(data, { provinceResult: provinceResult, cityResult: cityResult, districtResult: districtResult }) } else if (feature == 'getDistrictByCityId') { var districtByCity = data.result[0]; param.success(data, districtByCity) } else if (feature == 'calculateDistance') { var calculateDistanceResult = data.result.elements; var distance = []; for (var i = 0; i < calculateDistanceResult.length; i++) { distance.push(calculateDistanceResult[i].distance) } param.success(data, { calculateDistanceResult: calculateDistanceResult, distance: distance }) } else if (feature == 'direction') { var direction = data.result.routes; param.success(data, direction) } else { param.success(data) } }, buildWxRequestConfig(param, options, feature) { var that = this; options.header = { \"content-type\": \"application/json\" }; options.method = 'GET'; options.success = function (res) { var data = res.data; if (data.status === 0) { that.handleData(param, data, feature) } else { param.fail(data) } }; options.fail = function (res) { res.statusCode = ERROR_CONF.WX_ERR_CODE; param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg)) }; options.complete = function (res) { var statusCode = +res.statusCode; switch (statusCode) { case ERROR_CONF.WX_ERR_CODE: { param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg)); break } case ERROR_CONF.WX_OK_CODE: { var data = res.data; if (data.status === 0) { param.complete(data) } else { param.complete(that.buildErrorConfig(data.status, data.message)) } break } default: { param.complete(that.buildErrorConfig(ERROR_CONF.SYSTEM_ERR, ERROR_CONF.SYSTEM_ERR_MSG)) } } }; return options }, locationProcess(param, locationsuccess, locationfail, locationcomplete) { var that = this; locationfail = locationfail || function (res) { res.statusCode = ERROR_CONF.WX_ERR_CODE; param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg)) }; locationcomplete = locationcomplete || function (res) { if (res.statusCode == ERROR_CONF.WX_ERR_CODE) { param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg)) } }; if (!param.location) { that.getWXLocation(locationsuccess, locationfail, locationcomplete) } else if (that.checkLocation(param)) { var location = Utils.getLocationParam(param.location); locationsuccess(location) } } }; class QQMapWX { constructor(options) { if (!options.key) { throw Error('key值不能为空') } this.key = options.key }; search(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (!Utils.checkKeyword(options)) { return } var requestParam = { keyword: options.keyword, orderby: options.orderby || '_distance', page_size: options.page_size || 10, page_index: options.page_index || 1, output: 'json', key: that.key }; if (options.address_format) { requestParam.address_format = options.address_format } if (options.filter) { requestParam.filter = options.filter } var distance = options.distance || \"1000\"; var auto_extend = options.auto_extend || 1; var region = null; var rectangle = null; if (options.region) { region = options.region } if (options.rectangle) { rectangle = options.rectangle } var locationsuccess = function (result) { if (region && !rectangle) { requestParam.boundary = \"region(\" + region + \",\" + auto_extend + \",\" + result.latitude + \",\" + result.longitude + \")\"; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'search') } } else if (rectangle && !region) { requestParam.boundary = \"rectangle(\" + rectangle + \")\"; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'search') } } else { requestParam.boundary = \"nearby(\" + result.latitude + \",\" + result.longitude + \",\" + distance + \",\" + auto_extend + \")\"; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'search') } } wx.request(Utils.buildWxRequestConfig(options, { url: URL_SEARCH, data: requestParam }, 'search')) }; Utils.locationProcess(options, locationsuccess) }; getSuggestion(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (!Utils.checkKeyword(options)) { return } var requestParam = { keyword: options.keyword, region: options.region || '全国', region_fix: options.region_fix || 0, policy: options.policy || 0, page_size: options.page_size || 10, page_index: options.page_index || 1, get_subpois: options.get_subpois || 0, output: 'json', key: that.key }; if (options.address_format) { requestParam.address_format = options.address_format } if (options.filter) { requestParam.filter = options.filter } if (options.location) { var locationsuccess = function (result) { requestParam.location = result.latitude + ',' + result.longitude; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_SUGGESTION, data: requestParam }, \"suggest\")) }; Utils.locationProcess(options, locationsuccess) } else { if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_SUGGESTION, data: requestParam }, \"suggest\")) } }; reverseGeocoder(options) { var that = this; options = options || {}; Utils.polyfillParam(options); var requestParam = { coord_type: options.coord_type || 5, get_poi: options.get_poi || 0, output: 'json', key: that.key }; if (options.poi_options) { requestParam.poi_options = options.poi_options } var locationsuccess = function (result) { requestParam.location = result.latitude + ',' + result.longitude; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'reverseGeocoder') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_GET_GEOCODER, data: requestParam }, 'reverseGeocoder')) }; Utils.locationProcess(options, locationsuccess) }; geocoder(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (Utils.checkParamKeyEmpty(options, 'address')) { return } var requestParam = { address: options.address, output: 'json', key: that.key }; if (options.region) { requestParam.region = options.region } if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'geocoder') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_GET_GEOCODER, data: requestParam }, 'geocoder')) }; getCityList(options) { var that = this; options = options || {}; Utils.polyfillParam(options); var requestParam = { output: 'json', key: that.key }; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'getCityList') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_CITY_LIST, data: requestParam }, 'getCityList')) }; getDistrictByCityId(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (Utils.checkParamKeyEmpty(options, 'id')) { return } var requestParam = { id: options.id || '', output: 'json', key: that.key }; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'getDistrictByCityId') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_AREA_LIST, data: requestParam }, 'getDistrictByCityId')) }; calculateDistance(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (Utils.checkParamKeyEmpty(options, 'to')) { return } var requestParam = { mode: options.mode || 'walking', to: Utils.location2query(options.to), output: 'json', key: that.key }; if (options.from) { options.location = options.from } if (requestParam.mode == 'straight') { var locationsuccess = function (result) { var locationTo = Utils.getEndLocation(requestParam.to); var data = { message: \"query ok\", result: { elements: [] }, status: 0 }; for (var i = 0; i < locationTo.length; i++) { data.result.elements.push({ distance: Utils.getDistance(result.latitude, result.longitude, locationTo[i].lat, locationTo[i].lng), duration: 0, from: { lat: result.latitude, lng: result.longitude }, to: { lat: locationTo[i].lat, lng: locationTo[i].lng } }) } var calculateResult = data.result.elements; var distanceResult = []; for (var i = 0; i < calculateResult.length; i++) { distanceResult.push(calculateResult[i].distance) } return options.success(data, { calculateResult: calculateResult, distanceResult: distanceResult }) }; Utils.locationProcess(options, locationsuccess) } else { var locationsuccess = function (result) { requestParam.from = result.latitude + ',' + result.longitude; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'calculateDistance') } wx.request(Utils.buildWxRequestConfig(options, { url: URL_DISTANCE, data: requestParam }, 'calculateDistance')) }; Utils.locationProcess(options, locationsuccess) } }; direction(options) { var that = this; options = options || {}; Utils.polyfillParam(options); if (Utils.checkParamKeyEmpty(options, 'to')) { return } var requestParam = { output: 'json', key: that.key }; if (typeof options.to == 'string') { requestParam.to = options.to } else { requestParam.to = options.to.latitude + ',' + options.to.longitude } var SET_URL_DIRECTION = null; options.mode = options.mode || MODE.driving; SET_URL_DIRECTION = URL_DIRECTION + options.mode; if (options.from) { options.location = options.from } if (options.mode == MODE.driving) { if (options.from_poi) { requestParam.from_poi = options.from_poi } if (options.heading) { requestParam.heading = options.heading } if (options.speed) { requestParam.speed = options.speed } if (options.accuracy) { requestParam.accuracy = options.accuracy } if (options.road_type) { requestParam.road_type = options.road_type } if (options.to_poi) { requestParam.to_poi = options.to_poi } if (options.from_track) { requestParam.from_track = options.from_track } if (options.waypoints) { requestParam.waypoints = options.waypoints } if (options.policy) { requestParam.policy = options.policy } if (options.plate_number) { requestParam.plate_number = options.plate_number } } if (options.mode == MODE.transit) { if (options.departure_time) { requestParam.departure_time = options.departure_time } if (options.policy) { requestParam.policy = options.policy } } var locationsuccess = function (result) { requestParam.from = result.latitude + ',' + result.longitude; if (options.sig) { requestParam.sig = Utils.getSig(requestParam, options.sig, 'direction', options.mode) } wx.request(Utils.buildWxRequestConfig(options, { url: SET_URL_DIRECTION, data: requestParam }, 'direction')) }; Utils.locationProcess(options, locationsuccess) } }; module.exports = QQMapWX;"],"sourceRoot":""}